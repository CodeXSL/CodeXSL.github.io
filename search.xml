<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Linux目录结构]]></title>
    <url>%2F2019%2F04%2F04%2FLinux%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84%2F</url>
    <content type="text"><![CDATA[这里是Linux的系统文件的目录结构，了解系统目录结构对Linux的学习尤为重要。 Linux系统文件Linux的目录结构 Bin:全称binary。该目录中存储的是一些二进制文件，文件都是可以运行的。 Dec：该目录中主要存放时外界设备，例如硬盘。在其中的外接设备是不能直接使用的，需要挂载（分配盘符）。 Etc:该目录主要是存放一些配置文件。 Home：表示“家”，表示出了root用户以外的其他用户的家目录。 proc:该目录中存储的是Linux运行时候的进程。 Root:该目录root用户自己的家目录。 Sbin：全称super binary,该目录存储一些可以被执行的二进制文件，但是必须得有super权限的用户才能执行。 temp:表示“临时的”，当系统运行时候产生的临时文件都会在这个目录下存着。 User:存放的是用户自己安装的软件。 Var: 存放的是程序/系统的日志文件目录。 mnt:当外接设备需要挂载的时候，就需要挂载到mnt目录下。]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux 目录结构</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux常用指令]]></title>
    <url>%2F2019%2F04%2F03%2FLinux%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4%2F</url>
    <content type="text"><![CDATA[Linux的基本指令，方便自己查阅。 Linux的基本指令基础指令 ls指令（list） 语法1： #ls 作用： 列出当前工作目录下的所有文件/文件夹的名称。 语法2： #ls 路径 作用： 指定工作目录下的所有文件/文件夹的名称。 语法3：#ls 选项 路径 作用：列出指定路径下的文件/文件夹的名称，并以指定的格式进行显示。 age: #ls -l 路径 #ls -la 路径 （包括隐藏文件） 语法4：#ls -lh 路径 作用：列出指定路径下的所有文件夹的名称，以列表的形式并且在显示文档大小的时候以可读性较高的形式显示。 **列表的第一列字符表示文档的类型，其中&quot;-&quot;表示文件，&quot;d&quot;表示文件夹，在linux中隐藏文档一般以&quot;.&quot;开头。** pwd指令 语法：#pwd 作用：打印当前的工作目录 cd指令 语法：#cd 路径 作用：用于切换当前工作目录 在linux中有一个特殊的符号&quot;~&quot;，表示当前用户的家目录 #cd ~ mkdir指令 （make directory) 创建目录 语法1：#mkdir 路径 作用：在该路径下创建一个目录 注意：ls列出结果的颜色说明，其中蓝色文件表示文件夹，黑色的表示文件，卢瑟的其权限为拥有所有权限 语法2：#mkdir -p 路径 作用：当一次性创建多层不存在的目录的时候，添加-p选项，负责会报错 语法3：#mkdir 路径1 路径2 路径3... 作用：一次创建多个目录 touch指令 语法1：#touch 文件路径 作用：在指定的目录下新建一个文件 语法2：#touch 文件1 文件2 文件3 作用：一次性创建多个文件 cp (可以复制并同时改名) 语法：#cp 被复制文件路径 文件被复制到的路径 注意：当使用cp命令进行文件夹复制操作的时候需要添加选项&quot;-r&quot;，否则目录将会被忽略。 mv指令（move，剪切）也可以重命名 语法：#mv 需要移动的文档路径 需要保存的位置路径 作用：移动文档到新的位置 rm指令（remove,移除，删除） 语法：#rm 选项 需要移除的文档路径 选项： -f 强制删除（在删除的时候如果不带选项，会提示是否删除，如果确定Y，否则N） -r 删除一个文件夹 vim指令 vim是一款文本编辑器 语法：#vim 文件的路径 作用：打开一个文件，可以是存在，可以不存在 退出vim: shif + : + q 输出重定向 一般命令的输出都会显示在终端中，有些时候需要将一些命令的执行结果保存到文件中进行后续的分析/统计，这时候需要使用到输出重定向技术。 &gt;: 覆盖输出 &gt;&gt;:追加输出 语法：#正常执行指令 &gt; 需要输出到的文件路径 age: ls -la &gt; ls.text cat指令 语法：#cat 文件的路径 语法：cat有直接打开一个文件的功能（只查看，不编辑） 进阶指令 df指令 语法：#df -h 作用：查看磁盘的空间 free指令 语法：#free -m (-m表示以mb为单位查看) 作用：查看内存使用情况 head指令 语法：#head -n 文件路径 作用：查看一个文件的前n行，不设置默认显示10行 tail指令 语法1：#tail -n 文件路径 n表示数字 作用：查看一个文件的后n行，如果不指定默认显示后10行 语法2：#tail -f 文件路径 作用：可以通过tail指令来查看一个文件的动态变化 （该命令一般用于查看系统的日志文件比较多） less 指令 语法：#less 文件路径 作用：查看文件，以较少的内容输出，按下辅助功能键查看更过 wc指令 语法：#wc -lwc 需要统计的文件路径 作用：统计文件内容信息（包括行数、单词数、字节数） -l:表示lines,行数 -w:表示words，单词数（依照空格来判读） -c:表示bytes,字节数 date指令 作用：表示操作时间日期（读取、设置）shell脚本 语法1: #date 输出形式：2018年3月24日 星期六 15：54：28 语法2： #date +%F 输出形式： 2018-3-24 （等价于#date &quot;+%Y-%m-%d&quot; ) 语法3：#date &quot;+%F%T&quot; 输出形式： 2018-3-24 16：01：00 （等价于#date &quot;+%Y-%m-%d %H-%M-%S&quot;) cal指令 作用：用来操作日历 语法1：#cal 直接输出当前月的的日历 语法2： #cal -3 表示输出上一个月、本月、下一个月的日历 语法3： #cal -y 表示输出某一年的日期 clear/ ctrl + L 指令 语法：clear 或者ctrl +l 作用：清除终端上已经存在的命令和结果 管道 | 作用：管道一般用于“过滤” 、“扩展出路 语法：管道不能单独使用，必须配合前面所讲的一些指令来一起使用 eg:需要通过管道查询当前目录下包含“y”字母的文档名称 #ls /|grep y eg:统计某个目录下的文档的总数个数 #ls / |wc -l 高级指令 hostname指令 作用：操作服务器的主机名 语法1：#hostname 表示输出完整的主机名 语法2：#hostname -f 表示输出当前主机名的权限定域名 id指令 作用：查看一个用户的一些基本信息（包含用户id，用户组id,附加组id);该指令如果不指定用户则默认当前用户 语法1：#id 默认显示当前执行该命令的用户的基本信息 语法2：#id 用户名 显示指定用户的基本信息 验证用户信息：通过文件/etc/passwd 验证用户组信息： /etc/group whoami 指令 作用：我是谁，显示当前登录的用户，一般用于shell脚本，用于获取当前操作的用户名，方便记录日志 ps指令 作用：查看服务器的进程信息 语法：ps -ef -e 表示列出全部的进程 -f 显示全部的列 UID:该进程的用户ID PID:进程ID PPID:该进程的父级进程ID，如果一个进程的父级进程找不到，该程序的进程称之为僵尸进程 C:CPU的占用率% STIME:进程的启动时间 Time:进程的执行时间 CMD:进程的名称或者对应的路径 top指令 作用：查看服务器的进程占用资源 语法： 进入命令：#top（动态显示） 退出命令：按下q键 PID:进程ID USER:该进程对应的用户 PR:优先级 S:表示进程的状态（sleeping) S表示睡 R运行 %CPU:CPU的占用 %MEM:内存的占用 Time:执行的时间 COMMAND:进程的名称或者路径 快捷键： 在运行top的时候（大写） M:按照内存降序 I:查看多核多处理 P:按照CPU使用率从高到低 du指令 作用：查看目录（文件夹）的真实大小 语法：#du -sh -s 显示汇总的大小 -h 表示以高可读性的形式进行显示 -find指令 作用：用于查找文件（可以搜索隐藏文件） 语法：#find 路径范围 选项 选项值 选项： -name: 按照文档的名称进行搜素（支持模糊搜索） -type: 按照文档的类型进行搜索 文档类型：&quot;-&quot;表示文件。&quot;d&quot;表示文件夹 eg :#find / -name httpd.conf #fing /etc/sane.d/ -type f service指令 （不是所有的软件都有服务） 作用：用于控制一些软件的服务启动、停止、重启 语法：#service 服务名 start/stop/restrart eg: 需要启动本机安装的Apache（网站服务器软件），其服务名http #service http start #ps -ef |grep http(查看该服务的进程) kill指令 作用：表示杀死进程（当遇到僵尸进程或者是出于某些原因需要关闭进程的时候) 语法：#kill 进程id ifconfig指令 作用：用于操作网卡的相关的指令 语法：#ifconfig reboot指令 作用:重新启动计算机 语法1：#reboot 重启 语法2：reboot -w 模拟重启，但是不重启 shutdown指令 作用：关机 语法：#shutdown -h now 如果想要取消关机计划的话，则可以按照以下方式进行尝试 1.针对centos 7.x之前的版本：ctrl + c 2.针对之后的版本： shutdown -c 除了shutdown 还有#init0 #halt #poweroff uptime指令 作用：输出计算机的持续在线时间 语法：uptime uname指令 作用：获取计算机操作系统的信息 语法：#uname #uname -a 比较详细 netstat指令 作用：查看网络的连接状态 语法：#netstat -tnlp man指令 语法：#man (退出按下q键)]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux 学习笔记 指令</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[我的第一个博客]]></title>
    <url>%2F2019%2F04%2F02%2F%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[自己写的第一篇博客，还是觉的挺好玩的。在这里我就简单介绍自己搭建博客的流程吧！ 博客框架的搭建 去nodejs官网下载。官网地址：nodejs.org（hexo需要nodejs的支持） 安装nodej，下一步在命令号终端输入：node -v 查看nodejs的版本，npm -v 查看包管理器的版本 利用npm下载淘宝的镜像源，终端指令：npm install -g cnpm –registr=https://registry.npm.taobao.org 进行安装 cnpm安装好后，输入cnpm -v 进行版本查看 用cnpm安装hexo博客框架：cnpm install -g hexo-cli 自动下载并进行安装，安装完成后可以用hexo -v来验证 在自定义的空间新建一个文件夹(pwd查看当前路径）命令：mkdir 文件名（blog) cd 进入到文件夹内部使用命令：sudo(windons系统安装git终端是不加sudo) hexo init进行博客初始化 初始化完成之后ls -l查看文件夹中的内容 hexo s启动博客服务，在浏览器中输入localhost:4000访问初始化好的博客（写好博客做预览用）。ctrl+c断开连接 在终端输入：hexo n “博客标题”，创建新的博客文章。会自动在该文件夹中sourse/_posts/新建一个文件（及博客文章），然后cd sourse/_posts/目录下ls -l查看文件 然后用vim编辑器进行文章编辑（基于makedown的语法编写)，保存退出。cd ../.. 退回到blog目录下 在终端输入：hexo clean清理一下，在输入：hexo g重新生成整个文件 如何将做好的博客部署到github上 登录自己的GitHub账号 新建一个仓库，仓库命名必须符合一定格式（昵称名.github.io）点击create repository完成仓库新建（部署完成后通过昵称名.github.io进行访问） 在blog目录下装一个git插件。命令：cnpm install –save hexo-deployer-git安装该工具 设置blog下的_config.yml文件；vim _config.yml 在文件的底部Deployment下写入：deploy: type: git repo: https://github.com/CodeXSL/CodeXSL.github.io.git branch: master 写入完成后在终端输入：hexo d 将本地博客文件部署到GitHub上。在部署过程会提示输入GitHub的账号和密码 部署完成后再浏览器输入CodeXSL.github.io进行访问 如何自定义一个博客主题 在blog目录下载所需主题 git clone https://github.com/litten/hexo-theme-yilia.git themes/yilia (将下载好的主题放在该目录下) cd themes目录下可以ls -l进行查看 退回到blog目录下，vim _config.yml进行主题修改 theme： yilia 保存退出 hexo clean ;hexo g 重新生成一下 hexo d 将本地博客重新部署到Github上]]></content>
      <categories>
        <category>静态博客</category>
      </categories>
      <tags>
        <tag>博客 博客搭建 博客设置</tag>
      </tags>
  </entry>
</search>
